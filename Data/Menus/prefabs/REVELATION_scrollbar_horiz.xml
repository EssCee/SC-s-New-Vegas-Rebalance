<!-- 
// ZENIMAX MEDIA PROPRIETARY INFORMATION
//
// This software is developed and/or supplied under the terms of a license
// or non-disclosure agreement with ZeniMax Media Inc. and may not be copied
// or disclosed except in accordance with the terms of that agreement.
//
//   Copyright (c) 1999 ZeniMax Media Incorporated.
//   All Rights Reserved.
//
// ZeniMax Media Incorporated, Rockville, Maryland 20850
// http://www.zenimax.com
//
// FILE			scrollbar_horiz.xml
// VERSION		1.0
// AUTHOR:		Ricardo Gonzalez
// DATE			October 27, 2006
// INFO			A horizontal scrollbar
-->

<!--<hotrect name="scrollbar_horiz.xml">-->

	<!--INPUTS: Traits that may be optionally overridden-->
	<!-- Sizing info -->
	<_height> 32 </_height>
	<_width> 450 </_width>
	<_x> 0 </_x>
	<_y> 0 </_y>

	<!-- Num items / visible items in scrollbar-->
	<_number_of_items> 9 </_number_of_items>
	<_number_of_visible_items> 5 </_number_of_visible_items>

	<!-- Step intervals for scrollbar movement-->
	<_step_size> 1 </_step_size>
	<_jump_size>
		<copy src="me()" trait="_number_of_visible_items"/>
		<sub> 1 </sub>
	</_jump_size>

	<!-- Flags for scrollbar enabling / visibility-->
	<_enabled> &true; </_enabled>
	<_show_always> &false; </_show_always>
	<_has_arrows> &true; </_has_arrows>

	<!-- If true, scales the marker image proportional to the # items-->
	<_scale_marker_image> &true; </_scale_marker_image>
	<_marker_width></_marker_width>
	<_marker_height></_marker_height>
	<_marker_offset></_marker_offset>
	<_marker_image> Interface\Shared\scrollbar\horiz_marker.dds  </_marker_image>
	<texatlas> Interface\InterfaceShared.tai </texatlas>

	<_wheelmoved> 0 </_wheelmoved>
	<_SetInCode></_SetInCode>		<!-- Must be poked when setting the current value in code to signal the scrollbar marker to scroll -->

	<!--OUTPUTS-->
	<!-- Scrollbar width including ending arrows-->
	<_total_width>
		<copy src="me()" trait="width"/>
		<add>
			<!-- 2x 16 px arrows -->
			<copy> 32 </copy>
			<onlyif src="me()" trait="_has_arrows"/>
		</add>
	</_total_width>

	<!-- Current scrollbar percentage based on current / max values-->
	<_current_percentage>
		<copy src="me()" trait="_current_value"/>
		<div>
			<copy src="me()" trait="_number_of_items"/>
			<sub src="me()" trait="_number_of_visible_items"/>
			<max> 0 </max>
		</div>
	</_current_percentage>

	<!-- Current scrollbar value-->
	<_current_value>
		<!-- Incr. by _step_size when Up/Down arrows clicked-->
		<add>
			<copy src="child(scrollbar_horiz_right)" trait="clicked"/>
			<sub src="child(scrollbar_horiz_left)" trait="clicked"/>
			<mul src="me()" trait="_step_size"/>
			<onlyif src="me()" trait="_enabled"/>
		</add>

		<!-- Incr. by _jump_size when page tiles clicked-->
		<add>
			<copy src="child(scrollbar_horiz_page_right)" trait="clicked"/>
			<sub src="child(scrollbar_horiz_page_left)" trait="clicked"/>
			<mul src="me()" trait="_jump_size"/>
			<onlyif src="me()" trait="_enabled"/>
		</add>

		<!-- Incr. by _step_size when wheel moves-->
		<add>
			<copy src="me()" trait="_wheelmoved"/>
			<mul src="me()" trait="_step_size"/>
			<mul> -1 </mul>   <!-- Invert so that "wheel_up" goes to the right -->
			<onlyif src="me()" trait="_enabled"/>
		</add>

		<!-- Only use currently calculated value if no dragging has occurred over the scrollbar marker-->
		<onlyif>
			<copy src="child(scrollbar_horiz_marker)" trait="dragstartx"/>
			<lt> 0 </lt>
		</onlyif>

		<!-- Add drag offest if dragging has occured-->
		<add>
			<copy src="child(scrollbar_horiz_marker)" trait="_drag_value"/>
			<onlyifnot>
				<copy src="child(scrollbar_horiz_marker)" trait="dragstartx"/>
				<lt> 0 </lt>
			</onlyifnot>
		</add>

		<!-- Upper bound of # items - # visible items, lower bound of 0-->
		<min>
			<copy src="me()" trait="_number_of_items"/>
			<sub src="me()" trait="_number_of_visible_items"/>
		</min>
		<max> 0 </max>
	</_current_value>

	<alpha> 0 </alpha>
	<locus> &true; </locus>
	<target> &true; </target>
	<x>
		<copy src="me()" trait="_x"/>
		<add src="scrollbar_horiz_left" trait="width"/>
	</x>
	<y>
		<copy src="me()" trait="_y"/>
	</y>
	<depth> 2 </depth>
	<height>
		<copy src="me()" trait="_height"/>
	</height>

	<!-- Scrollbar width excluding end arrows-->
	<width>
		<copy src="me()" trait="_width"/>
		<sub src="scrollbar_horiz_left" trait="width"/>
		<sub src="scrollbar_horiz_left" trait="width"/>
	</width>

<!-- Only visible if # items > # visible items, or if _show_always is set to &true;-->
	<visible>
		<copy src="me()" trait="_number_of_items"/>
		<gt src="me()" trait="_number_of_visible_items"/>
		<or src="me()" trait="_show_always"/>
	</visible>

	<!--  Area on scrollbar to left of marker; moves marker a whole page when clicked -->
	<image name="scrollbar_horiz_page_left">
		<id> &generic; </id>
		<alpha> 0 </alpha>
		<target>
			<copy src="parent()" trait="target"/>
		</target>

		<width>
			<copy src="sibling(scrollbar_horiz_marker)" trait="x"/>
		</width>
		<height>
			<copy src="parent()" trait="height"/>
		</height>
		<x> 0 </x>
		<y> 0 </y>
	</image>

	<!--  Area on scrollbar to right of marker; moves marker a whole page when clicked -->
	<image name="scrollbar_horiz_page_right">
		<id> &generic; </id>
		<alpha> 0 </alpha>
		<target>
			<copy src="parent()" trait="target"/>
		</target>

		<width>
			<copy src="parent()" trait="width"/>
			<sub src="sibling(scrollbar_horiz_marker)" trait="width"/>
			<sub src="sibling(scrollbar_horiz_marker)" trait="x"/>
		</width>
		<height>
			<copy src="parent()" trait="height"/>
		</height>
		<x>
			<copy src="sibling(scrollbar_horiz_marker)" trait="x"/>
			<add src="sibling(scrollbar_horiz_marker)" trait="width"/>
		</x>
		<y> 0 </y>
	</image>

	<!-- Marker on scrollbar that signifies current value-->
	<image name="scrollbar_horiz_marker">
		<id> &generic; </id>
		<target> <copy src="parent()" trait="target"/> </target>
		
		<filename> <copy src="parent()" trait="_marker_image"/> </filename>
		<zoom> &scale; </zoom>

		<!-- Width is based on the marker image if there is one, on the step width otherwise-->
		<width>
			<copy> 0 </copy>
			<add>
				<copy src="parent()" trait="_marker_width"/>
				<onlyifnot src="parent()" trait="_scale_marker_image"/>
			</add>
			<add>
				<copy src="parent()" trait="width"/>
				<div src="me()" trait="_number_not_visible"/>
				<max> 32 </max>
				<onlyif src="parent()" trait="_scale_marker_image"/>
			</add>
		</width>
		<height>
			<copy> 0 </copy>
			<add>
				<copy src="parent()" trait="_marker_height"/>
				<onlyifnot src="parent()" trait="_scale_marker_image"/>
			</add>
			<add>
				<copy> 32 </copy>
				<onlyif src="parent()" trait="_scale_marker_image"/>
			</add>
		</height>

		<!-- Marker's X-value is based off of either the last drag value or the current value
		times the step width, depending on whether the mouse or the keyboard / gamepad was used
		to last move the marker-->
		<x>
			<copy> 0 </copy>
			<add>
				<copy src="me()" trait="dragx"/>
				<sub src="me()" trait="dragoffsetx"/>
				<onlyif>
					<copy src="me()" trait="_drag_flag"/>
					<eq> 0 </eq>
				</onlyif>
			</add>
			<add>
				<copy src="parent()" trait="_current_value"/>
				<mul src="me()" trait="_step_width"/>
				<onlyifnot>
					<copy src="me()" trait="_drag_flag"/>
					<eq> 0 </eq>
				</onlyifnot>
			</add>
			<max> 0 </max>
			<min>
				<copy src="parent()" trait="width"/>
				<sub src="me()" trait="width"/>
			</min>
		</x>
		<y> <copy src="parent()" trait="_marker_offset"/> </y>
		
		<draggable> <copy src="parent()" trait="_enabled"/> </draggable>
		<dragstartx> -1 </dragstartx>

		<!-- The current value of the scrollbar based on the current drag position of the scrollbar -->
		<_drag_value>
			<copy src="me()" trait="dragx"/>
			<div src="me()" trait="_step_width"/>
			<floor> 0 </floor>
		</_drag_value>

		<!-- 0 if the scrollbar was altered by dragging the marker, 1 or more if other methods were used -->
		<_drag_flag>
			<add>
				<copy> 1 </copy>
				<onlyif>
					<copy src="sibling(scrollbar_horiz_right)" trait="clicked"/>
					<add src="sibling(scrollbar_horiz_left)" trait="clicked"/>
					<add src="sibling(scrollbar_horiz_page_right)" trait="clicked"/>
					<add src="sibling(scrollbar_horiz_page_left)" trait="clicked"/>
					<add src="parent()" trait="_SetInCode"/>
					<add>
						<copy src="parent()" trait="_wheelmoved"/>
						<abs> 0 </abs>
					</add>
					<gt> 0 </gt>
				</onlyif>
			</add>
			<mul>
				<copy> 1 </copy>
				<onlyif>
					<copy src="me()" trait="dragstartx"/>
					<lt> 0 </lt>
				</onlyif>
			</mul>
		</_drag_flag>
		
		<_number_not_visible>
			<copy src="parent()" trait="_number_of_items"/>
			<sub src="parent()" trait="_number_of_visible_items"/>
			<add> 1 </add>
		</_number_not_visible>

		<!-- Total drag distance needed before current value will incr / decr -->
		<_step_width>
			<copy src="parent()" trait="width"/>
			<sub src="me()" trait="width"/>
			<div>
				<copy src="parent()" trait="_number_of_items"/>
				<sub src="parent()" trait="_number_of_visible_items"/>
			</div>
		</_step_width>
	</image>

	<!-- Left button: Moves marker to the left -->
	<image name="scrollbar_horiz_left">
		<id> &generic; </id>
		<target> <copy src="parent()" trait="target"/> </target>
		
		<filename> Interface\Shared\scrollbar\arrow_left.dds </filename>
		<width>
			<copy> 0 </copy>
			<add>
				<copy> 16 </copy>
				<onlyif src="parent()" trait="_has_arrows"/>
			</add>
		</width>
		<height>
			<copy> 0 </copy>
			<add>
				<copy> 32 </copy>
				<onlyif src="parent()" trait="_has_arrows"/>
			</add>
		</height>
		<x>
			<copy> 0 </copy>
			<sub src="me()" trait="width"/>
		</x>
		<y> 0 </y>
	</image>

<!-- Right button: Moves marker to the right -->
	<image name="scrollbar_horiz_right">
		<id> &generic; </id>
		
		<target> <copy src="parent()" trait="target"/> </target>
		
		<filename> Interface\Shared\scrollbar\arrow_right.dds </filename>
		<width>
			<copy> 0 </copy>
			<add>
				<copy> 16 </copy>
				<onlyif src="parent()" trait="_has_arrows"/>
			</add>
		</width>
		<height>
			<copy> 0 </copy>
			<add>
				<copy> 32 </copy>
				<onlyif src="parent()" trait="_has_arrows"/>
			</add>
		</height>
		<x> <copy src="parent()" trait="width" /> </x>
		<y> 0 </y>
	</image>
<!--</image>-->